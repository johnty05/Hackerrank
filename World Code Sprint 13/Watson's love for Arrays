#!/bin/python3

import os
import sys

# Complete the howManyGoodSubarrays function below.
def subLists(list1):
    subarray=[list1[i:i+j] for i in range(0,len(list1)) for j in range(1,len(list1)-i+1)]
    return subarray

def prod(list):
    pro=1
    for i in list:
        pro=pro*i
    return pro


def howManyGoodSubarrays(A, m, k):
    # Return the number of good subarrays of A.
    c=0
    sub=subLists(A)
    for i in sub:
        if((prod(i)%m)==k) and (m!=0):
            c=c+1
    return c

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input())

    for t_itr in range(t):
        nmk = input().split()

        n = int(nmk[0])

        m = int(nmk[1])

        k = int(nmk[2])

        A = list(map(int, input().rstrip().split()))

        result = howManyGoodSubarrays(A, m, k)

        fptr.write(str(result) + '\n')

    fptr.close()
